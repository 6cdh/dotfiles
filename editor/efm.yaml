---
version: 2
root-markers:
  - .git/

tools:
  cpp-cppcheck: &cpp-cppcheck
    lint-command: "cppcheck --quiet --force --enable=style --error-exitcode=1 ${INPUT}"
    lint-ignore-exit-code: true
    lint-formats:
      - "%f:%l:%c: %m"
    root-markers:
      - compile_commands.json

  cpp-clangformat: &cpp-clangformat
    format-command: "clang-format"
    format-stdin: true

  cpp-flawfinder: &cpp-flawfinder
    lint-command: "flawfinder -CDQS"
    lint-ignore-exit-code: true
    lint-formats:
      - "%f:%l:%c:%m"

  cmake-cmake-format: &cmake-cmake-format
    format-command: "cmake-format -"
    format-stdin: true

  css-prettier: &css-prettier
    format-command: "prettier ${--tab-width:tabWidth} ${--single-quote:singleQuote} --parser css"
    format-stdin: true
  csv-csvlint: &csv-csvlint
    lint-command: "csvlint"

  dockerfile-hadolint: &dockerfile-hadolint
    lint-command: "hadolint"
    lint-formats:
      - "%f:%l %m"
  fennel-fnlfmt: &fennel-fnlfmt
    format-command: "fnlfmt -"
    format-stdin: true

  fennel-fennel: &fennel-fennel
    lint-command: "fennel --globals vim --compile"
    lint-ignore-exit-code: true
    lint-formats:
      - "%ECompile %trror in %f:%l"
      - "%EParse %trror in %f:%l"
      - "%C%p^^%#"
      - "%C  %m"
      - "%C* %m."
      - "%C%.%#"

  go-staticcheck: &go-staticcheck
    lint-command: "staticcheck"
    lint-ignore-exit-code: true
    lint-formats:
      - "%f:%l:%c %m"

  html-prettier: &html-prettier
    format-command: "prettier ${--tab-width:tabWidth} ${--single-quote:singleQuote} --parser html"
    format-stdin: true

  json-prettier: &json-prettier
    format-command: "prettier ${--tab-width:tabWidth} --parser json"
    format-stdin: true
  json-jq: &json-jq
    lint-command: "jq ."
  json-fixjson: &json-fixjson
    format-command: "fixjson"

  javascript-prettier: &javascript-prettier
    format-command: "prettier ${--tab-width:tabWidth} ${--single-quote:singleQuote} --parser typescript"
    format-stdin: true

  javascript-eslint: &javascript-eslint
    lint-command: "eslint -f visualstudio --stdin --stdin-filename ${INPUT}"
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - "%f(%l,%c): %tarning %m"
      - "%f(%l,%c): %rror %m"

  lua-lua-format: &lua-lua-format
    format-command: "lua-format -i"
    format-stdin: true
  lua-luacheck: &lua-luacheck
    lint-command: "luacheck --no-color -"
    lint-stdin: true
    lint-ignore-exit-code: true
  lua-stylua: &lua-stylua
    format-command: "stylua -s --stdin-filepath ${INPUT} -"
    format-stdin: true
  lua-selene: &lua-selene
    lint-command: "selene --display-style quiet"
    lint-formats:
      - "%f:%l:%c: %m"
    lint-ignore-exit-code: true

  markdown-markdownlint: &markdown-markdownlint
    lint-command: 'markdownlint -s -c %USERPROFILE%\.markdownlintrc'
    lint-stdin: true
    lint-formats:
      - "%f:%l %m"
      - "%f:%l:%c %m"
      - "%f: %l: %m"
  markdown-pandoc: &markdown-pandoc
    format-command: "pandoc -f markdown -t gfm -sp --tab-stop=4 --columns=90"
    format-stdin: true

  python-black: &python-black
    format-command: "black --quiet -"
    format-stdin: true
  python-flake8: &python-flake8
    lint-command: "flake8 --stdin-display-name ${INPUT} -"
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-formats:
      - "%f:%l:%c: %m"
  python-mypy: &python-mypy
    lint-command: "mypy --show-column-numbers"
    lint-ignore-exit-code: true
    lint-formats:
      - "%f:%l:%c: %trror: %m"
      - "%f:%l:%c: %tarning: %m"
      - "%f:%l:%c: %tote: %m"

  rst-pandoc: &rst-pandoc
    format-command: "pandoc -f rst -t rst -s --columns=79"
  rst-lint: &rst-lint
    lint-command: "rst-lint"
    lint-formats:
      - "%tNFO %f:%l %m"
      - "%tARNING %f:%l %m"
      - "%tRROR %f:%l %m"
      - "%tEVERE %f:%l %m"

  sh-shellcheck: &sh-shellcheck
    lint-command: "shellcheck -f gcc -x"
    lint-source: "shellcheck"
    lint-ignore-exit-code: true
    lint-formats:
      - "%f:%l:%c: %trror: %m"
      - "%f:%l:%c: %tarning: %m"
      - "%f:%l:%c: %tote: %m"
  sh-shfmt: &sh-shfmt
    format-command: "shfmt -ci -s -bn"
    format-stdin: true

  toml-prettier: &toml-prettier
    format-command: "prettier ${--tab-width:tabWidth} --parser toml"
    format-stdin: true

  vim-vint: &vim-vint
    lint-command: "vint -"
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-formats:
      - "%f:%l:%c: %m"

  yaml-yamllint: &yaml-yamllint
    lint-command: "yamllint -f parsable -"
    lint-stdin: true
    lint-ignore-exit-code: true
  yaml-prettier: &yaml-prettier
    format-command: "prettier ${--tab-width:tabWidth} --parser yaml"
    format-stdin: true

languages:
  cpp:
    - <<: *cpp-clangformat
    - <<: *cpp-cppcheck
    - <<: *cpp-flawfinder
  dockerfile:
    - <<: *dockerfile-hadolint
  fennel:
    - <<: *fennel-fennel
  go:
    - <<: *go-staticcheck
  html:
    - <<: *html-prettier
    - <<: *css-prettier
  javascript:
    - <<: *javascript-eslint
    - <<: *javascript-prettier
  json:
    - <<: *json-jq
    - <<: *json-prettier
  lua:
    - <<: *lua-stylua
    - <<: *lua-luacheck
  markdown:
    - <<: *markdown-pandoc
  python:
    - <<: *python-flake8
    - <<: *python-black
    - <<: *python-mypy
  sh:
    - <<: *sh-shellcheck
    - <<: *sh-shfmt
  toml:
    - <<: *toml-prettier
  vim:
    - <<: *vim-vint
  yaml:
    - <<: *yaml-yamllint
    - <<: *yaml-prettier
